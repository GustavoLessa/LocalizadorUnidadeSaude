@model IEnumerable<CodeHB.HealthUnitsPoa.Web.Models.Record>

@{
    ViewBag.Title = "Lista Unidades saúde POA";
}

<h3>Lista Unidades saúde POA</h3>

@using (Html.BeginForm("ListUnits", "HealthUnits"))
{
    <fieldset>
       
        <div class="campos" id="locationField">
        <label for="txtEndereco">Endereço:</label>
        <input Value="@TempData["startAddress"]" id="autocomplete" name="startAddress" type="text" value="" placeholder="Informe seu endereço" required="required" onFocus="geolocate()"/>
        @Html.ValidationMessage("startAddress", "", new { @class = "text-danger" })
        <input type="submit" value="Buscar" class="btn btn-primary btnAddress" />
    </div>

        <input type="hidden" id="txtLatitude" name="txtLatitude" />
        <input type="hidden" id="txtLongitude" name="txtLongitude" />
    </fieldset>   
}

@if (TempData["startAddress"] != null)
{
    <table class="table table-striped table-condensed table-bordered">
        <thead class="alert-info" id="customers">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Distance)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TipoEmergencia)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TipoInstitucao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th>
                    @Html.DisplayName("Rota")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Telefone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Endereco)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LinkPt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EspecialidadePt)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center" style="width:30px">
                        @Html.DisplayFor(modelItem => item.Distance) km
                    </td>
                    <td class="text-center" style="width:100px">
                        @Html.DisplayFor(modelItem => item.TipoEmergencia)
                    </td>
                    <td class="text-center" style="width:110px">
                        @Html.DisplayFor(modelItem => item.TipoInstitucao)
                    </td>
                    <td style="width:130px">
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td class="text-center" style="width:80px">
                        @Html.ActionLink("Ver rota", "GetRoute", new { startAddress = TempData["startAddress"], endAddress = item.Endereco }, new { @class = "btn btn-warning btn-xs" })
                    </td>
                    <td style="width:100px">
                        @Html.DisplayFor(modelItem => item.Telefone)
                    </td>
                    <td style="width:200px">
                        @Html.DisplayFor(modelItem => item.Endereco)
                    </td>
                    <td class="text-center" style="width:80px">
                        <a class="btn btn-xs btn-success" href="@item.LinkPt">Ver site</a>
                    </td>
                    <td style="max-width:100px">
                        @Html.DisplayFor(modelItem => item.EspecialidadePt)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/RouteMap.js"></script>
<script src="~/Scripts/jquery-ui.custom.min.js"></script>

<script>

    $(".btn-buscar").click(function () {
        $(".table").show();
    });

    // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    var placeSearch, autocomplete;

    var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
            }
        }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: 40.601203,
                    lng: -8.668173
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
            autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBqouaVNf0Y3G4fP2VAvde5sDZc3U5C2d4&libraries=places&callback=initAutocomplete" async defer></script>


